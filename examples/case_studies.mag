/****************************************
 *  Created on 6/23/2023 by PAB.        *
 *  Encodings of the three case studies * 
 *  described in Section 5 of the paper.*
****************************************/


/*
  Case Study #1: this is the basic example 
  from the original paper. It is a *-algebra 
  R with radical-semisimple decomp R = J + S
  with S not *-invariant and cannot be 
  twisted to become *-invariant. Rather, we 
  must identify a proper subalgebra D whose 
  unitarian elements are all of the 
  unitarians of R.
*/

     __CS1_star_image := function (M)
          N := 0 * M;
          A := ExtractBlock (M, 1, 1, 2, 2);
          AJ := 0 * A; AJ[1][2] := A[2][1]; AJ[2][1] := A[1][2];
          B := ExtractBlock (M, 1, 3, 2, 2);
          InsertBlock (~N, Transpose (A), 1, 1);
          InsertBlock (~N, Transpose (A), 3, 3);
          InsertBlock (~N, AJ + Transpose (B), 1, 3);
     return N;
     end function;


CaseStudy1 := function (e)
  K := GF (2^e);
  ma := MatrixAlgebra (K, 2);
  MA := MatrixAlgebra (K, 4);
  Z := MA!0;
  R_gens := [ DiagonalJoin (ma.i, ma.i) : i in [1..Ngens (ma)] ];
  R_gens cat:= [ InsertBlock (Z, ma.i, 1, 3) : i in [1..Ngens (ma)] ];
  R := sub < MA | R_gens >;
  R`Star := hom < R -> R | M :-> __CS1_star_image (M) >;
return R;
end function;



/*
  Case Study #2: this is the extended example 
  conceived by Martin. It is a *-algebra 
  R with radical-semisimple decomp R = J + S
  with S not *-invariant. Here, however, S 
  can be repeatedly twisted to produce a *-invariant 
  complement. 
*/

     __CS2_star_image := function (M)
          N := 0 * M;
          A := ExtractBlock (M, 1, 1, 2, 2);
          AJ := 0 * A; AJ[1][2] := A[2][1]; AJ[2][1] := A[1][2];
          B := ExtractBlock (M, 1, 4, 2, 2);
          InsertBlock (~N, Transpose (A), 1, 1);
          InsertBlock (~N, Transpose (A), 4, 4);
          InsertBlock (~N, AJ + Transpose (B), 1, 4);
          N[3][3] := M[3][3];
          v := ExtractBlock (M, 1, 3, 2, 1);
          w := ExtractBlock (M, 3, 4, 1, 2);
          InsertBlock (~N, Transpose (w), 1, 3);
          InsertBlock (~N, Transpose (v), 3, 4);
     return N;
     end function;

CaseStudy2 := function (e)
  K := GF (2^e);
  ma := MatrixAlgebra (K, 2);
  MA := MatrixAlgebra (K, 5);
  Z := MA!0;
  R_gens := [ DiagonalJoin (DiagonalJoin (ma.i, Matrix ([[K!0]])), ma.i) : i in [1..Ngens (ma)] ];
  K_gen := Z; K_gen[3][3] := K.1; Append (~R_gens, K_gen);
  V_gen := Z; V_gen[1][3] := 1; Append (~R_gens, V_gen);
  W_gen := Z; W_gen[3][4] := 1; Append (~R_gens, W_gen);
  R_gens cat:= [ InsertBlock (Z, ma.i, 1, 3) : i in [1..Ngens (ma)] ];
  R := sub < MA | R_gens >;
  R`Star := hom < R -> R | M :-> __CS2_star_image (M) >;
return R;
end function;



/*
  Case Study #3: this is a *-algebra whose semisimple unitarians 
  correspond to isometries of a quadratic form. Again, there 
  is a radical-semisimple decomposition R = J + S, but now we 
  cannot twist to a *-invariant decomposition, nor can we 
  find, by linear methods, a proper *-subalgebra D whose 
  unitarians are the same as those of R.
*/

CaseStudy3 := function (e : Minus := false)
  PHI := StandardQuadraticForm (2, GF(2^e) : Minus := Minus);
return QuadraticFormToStarAlgebra (PHI);
end function;



// a function for extracting information from our case studies
ProcessExample := function (R)
  D := R;
  J, S := MyWedderburnDecomposition (D);
  Q := J;
del := hom < S -> Q | s :-> s + (s @ S`Star) @ D`Star >;
  d := Degree (D);
  K := BaseRing (D); 
  k := Degree (K);
  rho := PrimitiveElement (K);
  one := Identity (D);
  gens := &cat [ [ one + rho^j * J.i : j in [0..k-1] ] : i in [1..Ngens (J)] ];
  U := sub < GL (d, K) | gens >;
/*
im_mu := 
{ (D!(u) @ D`Star) * (D!(u)) + one : u in U };
im_tr :=
{ z @ D`Star + z : z in Q };
assert im_tr subset im_mu;
*/
  layer := 0;
  while Dimension (Q) gt 0 do
       LinearLift (~D, ~J, ~Q, ~S, ~U);
  end while;
return D, del;
end function;




